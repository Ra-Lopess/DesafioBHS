#pragma checksum "C:\Users\raiss\source\repos\ToBuy\ToBuy\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "956568e270a8c3cd939e82304b203fbb7ef3882a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\raiss\source\repos\ToBuy\ToBuy\Views\_ViewImports.cshtml"
using ToBuy;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\raiss\source\repos\ToBuy\ToBuy\Views\_ViewImports.cshtml"
using ToBuy.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"956568e270a8c3cd939e82304b203fbb7ef3882a", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0c1bc888ca36745d1126da4d91175b215cefd1e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\raiss\source\repos\ToBuy\ToBuy\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Bem vindo(a) ao ToBuy!</h1>
    <p>Bom dia!

Venho por meio deste Readme comunicar que fui capaz de implementar todos os requisitos, exceto pela adição de itens à um pedido, porém, é possível sim você fazer a adição de um pedido não podendo apenas ligar itens à ele, admito que tentei bastante implementar isto mas pelo tempo preferi enviar o que já tinha.

<br/>Adicionei também uma paginação ao projeto, a possibilidade de restaurar um produto, um filtro e inventei a logo ToBuy :).

<br/>Na página inicial temos todos os pedidos, sendo que em cada uma temos: um carrinho verde para produto disponível e vermelho para indisponível, a descrição do produto com a data e itens de cada, e por fim a possibilidade de remoção ou restauração.

<br/>Na página de adicionar pedido é possível adicionar uma descrição à um novo pedido, mas a adição de itens não é possível como ja dito anteriormente. O produto é criado no final da tabela com a data atual e o preço ini");
            WriteLiteral("cial como 0.\r\n\r\n<br/>Por fim, é possível realizar a busca a partir da descrição de algum produto.\r\n\r\n<br/><br/>Obrigada pela oportunidade e espero que meu projeto atenda o esperado!</p>\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
